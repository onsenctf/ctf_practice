from Crypto.Util.number import *
from sage.all_cmdline import *

n = 23734771090248698495965066978731410043037460354821847769332817729448975545908794119067452869598412566984925781008642238995593407175153358227331408865885159489921512208891346616583672681306322601209763619655504176913841857299598426155538234534402952826976850019794857846921708954447430297363648280253578504979311210518547
e = 65537
c = 22417329318878619730651705410225614332680840585615239906507789561650353082833855142192942351615391602350331869200198929410120997195750699143505598991770858416937216272158142281144782652750654697847840376002907226725362778292640956434687927315158519324142726613719655726444468707122866655123649786935639872601647255712257
r = 4788463264666184142381766080749720573563355321283908576415551013379

X = PolynomialRing(Zmod(r), 'X').gen()
xs = [int(x) for x in (88*X**3 - n).roots(multiplicities=false)]

for x in xs:
    for k in range(2495):
        q = (Integer((n - 2**(513+281)*r)//(88+r)).nth_root(3, True)[0] // r + k) * r + x
        if n % q == 0:
            p = n // q
            print(long_to_bytes(pow(c, pow(e, -1, (p-1)*(q-1)), n)).decode())
